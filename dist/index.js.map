{"version":3,"sources":["webpack://useToggle/webpack/universalModuleDefinition","webpack://useToggle/webpack/bootstrap","webpack://useToggle/external \"react\"","webpack://useToggle/./node_modules/intersection-observer/intersection-observer.js","webpack://useToggle/./src/use-infinite-scroll-list.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","IntersectionObserverEntry","this","intersectionRatio","document","startDoc","doc","frame","getFrameElement","ownerDocument","registry","crossOriginUpdater","crossOriginRect","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_setupCrossOriginUpdater","boundingClientRect","intersectionRect","convertFromParentRect","top","bottom","left","right","width","height","forEach","observer","_checkForIntersections","_resetCrossOriginUpdater","observe","target","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","unobserve","filter","_unmonitorIntersections","length","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","win","defaultView","_monitoringDocuments","indexOf","callback","monitoringInterval","domObserver","setInterval","addEvent","MutationObserver","attributes","childList","characterData","subtree","_monitoringUnsubscribes","clearInterval","removeEvent","index","rootDoc","itemDoc","unsubscribe","splice","unsubscribes","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","time","performance","now","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","frameElement","e","ensureDOMRect","targetArea","intersectionArea","Number","toFixed","opt_options","fn","timeout","timer","options","setTimeout","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","el","err","y","x","parentBoundingRect","parentIntersectionRect","child","parentNode","host","assignedSlot","defaultLoadingElement","useInfiniteScrollList","init","more","loadingElement","useState","endOfList","setEndOfList","isFetching","setIsFetching","isDone","setIsDone","useEffect","result","fetchInit","useRef","entries","currentObserver","current","fetchMore","InfiniteScrollList","useCallback","children","id","ref"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"useToggle\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"useToggle\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  if (doc != (this.root && this.root.ownerDocument || document)) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc = (this.root && this.root.ownerDocument || document);\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: crossOriginUpdater && !this.root ? null : rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target) &&\n    (!this.root || this.root.ownerDocument == target.ownerDocument);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  if (parent && parent.assignedSlot) {\n    // If the parent is distributed in a <slot>, return the parent of a slot.\n    return parent.assignedSlot.parentNode;\n  }\n\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport 'intersection-observer';\n\nconst defaultLoadingElement = (\n  <>\n    <div>...Loading...</div>\n  </>\n);\n\nexport default useInfiniteScrollList = ({ init, more, loadingElement = defaultLoadingElement }) => {\n  const [endOfList, setEndOfList] = useState(null);\n  const [isFetching, setIsFetching] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n\n  useEffect(() => {\n    async function fetchInit() {\n      const result = await init();\n      setIsDone(result.isDone);\n    }\n    fetchInit();\n  }, []);\n\n  const observer = useRef(\n    new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting && !isFetching) {\n            setIsFetching(true);\n          }\n        });\n      },\n      {\n        threshold: 1,\n        rootMargin: '0px 0px 50px',\n      },\n    ),\n  );\n\n  useEffect(() => {\n    const currentObserver = observer.current;\n    endOfList && currentObserver.observe(endOfList);\n    return () => {\n      endOfList && currentObserver.unobserve(endOfList);\n    };\n  }, [endOfList]);\n\n  useEffect(() => {\n    async function fetchMore() {\n      const result = await more();\n      setIsDone(result.isDone);\n      setIsFetching(false);\n    }\n    if (isFetching && !isDone) {\n      fetchMore();\n    }\n  }, [isFetching, isDone]);\n\n  const InfiniteScrollList = useCallback(\n    ({ children }) => {\n      return (\n        <>\n          {children}\n          <div id=\"bottom_of_list\" ref={setEndOfList} />\n          {isFetching && !isDone && loadingElement}\n        </>\n      );\n    },\n    [isDone, isFetching],\n  );\n\n  return { InfiniteScrollList };\n};\n"],"sourceRoot":""}